# Copyright 2018-2020 Radicalbit S.r.l.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

nsdb {

  node {
    hostname = "127.0.0.1"
    port = 2552
  }

  grpc {
    interface = "0.0.0.0"
    port = 7817
  }

  http {
    interface = "0.0.0.0"
    port = 9000
    https-port = 9443

  }

  storage {
    base-path  = "data"
    index-path = ${nsdb.storage.base-path}"/index"
    commit-log-path = ${nsdb.storage.base-path}"/cl"
    metadata-path = ${nsdb.storage.base-path}"/metadata"
  }

  commit-log {
    serializer = "io.radicalbit.nsdb.commit_log.StandardCommitLogSerializer"
    writer = "io.radicalbit.nsdb.commit_log.RollingCommitLogFileWriter"
    // Size expressed in KB
    max-size = 10000000
    passivate-after = 1h
  }

  cluster{
    replication-factor = 2
    consistency-level = 1
    mode = native
    required-contact-point-nr = 3
    endpoints = [
      {
        host = "127.0.0.1"
        port = 8558
      },
      {
        host = "127.0.0.2"
        port = 8558
      },
      {
        host = "127.0.0.3"
        port = 8558
      }
    ]
  }

  sharding {
    interval = 1d
    passivate-after = 1h
  }

  security {
    enabled = false
    auth-provider-class = ""
  }

  read {
    parallelism {
      initial-size = 5
      lower-bound= 2
      upper-bound = 15
    }
  }

  write {
    retry-attempts = 10
  }

  global.timeout = 30 seconds
  http-endpoint.timeout = 60 seconds
  rpc-endpoint.timeout = 30 seconds
  rpc-akka-endpoint.timeout = 30 seconds

  read-coordinator.timeout = 30 seconds
  metadata-coordinator.timeout = 30 seconds
  write-coordinator.timeout = 30 seconds
  namespace-schema.timeout = 30 seconds
  namespace-data.timeout = 30 seconds
  publisher.timeout = 30 seconds
  publisher.scheduler.interval = 5 seconds

  write.scheduler.interval = 15 seconds

  retention.check.interval = 30 seconds

  stream.timeout = 30 seconds

  websocket {
    // Websocket publish period expressed in milliseconds
    refresh-period = 100
    //Websocket retention size
    retention-size = 10
  }

  math {
    precision = 10
  }
}