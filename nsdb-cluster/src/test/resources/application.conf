# Copyright 2018-2020 Radicalbit S.r.l.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

akka.actor {
  provider = "local"
  serialize-messages = on

  serialization-bindings {
    "io.radicalbit.nsdb.common.protocol.NSDbSerializable" = jackson-json
  }

  control-aware-dispatcher {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }
}

akka.extensions=[]
akka.test.timefactor = 5

nsdb {

  global.timeout = 30 seconds

  metadata-coordinator.timeout = 10s

  write.scheduler.interval = 5 seconds

  storage {
    base-path  = "target"
    index-path = ${nsdb.storage.base-path}"/index"
    commit-log-path = ${nsdb.storage.base-path}"/commit_log"
    metadata-path = ${nsdb.storage.base-path}"/metadata"
    strategy = "memory"
  }

  commit-log {
    serializer = "io.radicalbit.nsdb.commit_log.StandardCommitLogSerializer"
    writer = "io.radicalbit.nsdb.commit_log.RollingCommitLogFileWriter"
    max-size = 50000
    passivate-after = 5s
  }

  cluster{
    replication-factor = 1
    metrics-selector = disk
    write-processing = parallel
  }

  sharding {
    interval = 1d
    passivate-after = 1h
  }

  read {
    parallelism {
      initial-size = 1
      lower-bound= 1
      upper-bound = 1
    }
  }

  write {
    retry-attempts = 10
  }

  read-coordinator.timeout = 30 seconds
  metadata-coordinator.timeout = 30 seconds
  write-coordinator.timeout = 30 seconds
  namespace-schema.timeout = 30 seconds
  namespace-data.timeout = 30 seconds
  publisher.timeout = 30 seconds
  publisher.scheduler.interval = 5 seconds

  write.scheduler.interval = 5 seconds

  retention.check.interval = 1 seconds

  stream.timeout = 30 seconds
}
